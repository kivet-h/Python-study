"""
    打印函数print()
"""

# 1. 字符编码
# 不赘述，参考：https://liaoxuefeng.com/books/python/basic/string-encoding/index.html

# 2. Python的字符串
# 见：https://liaoxuefeng.com/books/python/basic/string-encoding/index.html

# 3. 格式化
# 1. %
# 在字符串内部：
# 占位符：%s，表示用 字符串 替换
# 占位符：%d，表示用 整数 替换
# 占位符：%f，表示用 浮点数 替换
# 占位符：%x，表示用 十六进制整数 替换
# 有几个%?占位符，后面就跟几个变量或者值，顺序要对应好。
# 如果只有一个%?，后面得括号，可以省略。
# print('hello %s, age: %d, height: %f, 进制: %x' % ('world', 18, 170.2, 0xff00)) # ==> hello world, age: 18, height: 170.200000, 进制: ff00

# Q：为什么上面浮点数输出结果是170.200000？
# A：在python中，%f占位符默认保留6位小数。

# 格式化整数和浮点数，还可以补齐宽度
# print('%d' % 1) # ==> 1
# print('%2d' % 1) # ==>  1 (最小宽度为2，数字1不满足，所以打印出结果为： 1，前面有个空格)
# print('%2d' % 123) # ==> 123（最小宽度为2，数字123已经超过最小宽度，所以打印结果为：123）


# 对整数补0
# print('%002d' % 1) # ==> 01
# print('%02d' % 1) # ==> 01

# 使用%格式化，只能补0，即：当数值不满宽度时，只能用0在左侧填充，不能使用其它字符或数字。
# print('%12d' % 1) # ==>            1（表示最小宽度为12，而并不是以1补充成最小宽度2位）
# print('%012d' % 1) # ==> 000000000001（以0作为标识符，最小宽度12位，不够左侧补0）

# %符号紧接着后面的第一个数字，可以写0，表示以0补全至最小宽度。
# 第二个数字到d字母之间，表示最小宽度。

# 四舍五入
# print('%.2f' % 3.145592) # ==> 3.15



# 4. format
# format()方法会用传入的参数依次替换字符串内的占位符{0}、{1}……
# formatStr = 'hello {0}, 展示数字1.235但是保留两位小数:{1:.2f}'
# print(formatStr.format('world', 1.235)) # ==> hello world, 展示数字1.235但是保留两位小数:1.24



# 5. f-string
# a = 2.5
# b = a * 4 + 0.1234
# print(f'结果为：a: {a}, b: {b}, b保留两位：{b:.2f}') # ==> 结果为：a: 2.5, b: 10.1234, b保留两位：10.12